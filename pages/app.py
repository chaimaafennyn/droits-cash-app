import streamlit as st
import json
import os

# ---------- FONCTIONS UTILITAIRES ----------

FICHIER_JSON = "planning.json"

# Charger ou cr√©er planning
def charger_planning():
    if os.path.exists(FICHIER_JSON):
        with open(FICHIER_JSON, "r", encoding="utf-8") as f:
            return json.load(f)
    else:
        return {
            "Mardi": {
                "Petit-d√©jeuner": "Pain + Vache qui rit + th√© + dattes",
                "D√©jeuner (√† emporter)": "Salade pommes de terre + thon + concombre + olives",
                "D√Æner": "Nouilles saut√©es + ≈ìuf + tomate concentr√©e"
            },
            "Mercredi": {
                "Petit-d√©jeuner": "Corn flakes + lait + 1 banane",
                "D√©jeuner (√† emporter)": "Sandwich omelette + kheli3 + pain",
                "D√Æner": "Velout√© tomate + tartine fromage + yaourt"
            },
            "Jeudi": {
                "Petit-d√©jeuner": "Pain + miel + th√© √† la menthe + dattes",
                "D√©jeuner": "Quiche sans p√¢te + salade tomate/concombre",
                "D√Æner": "Soupe tomate + pain + ≈ìuf dur + flan"
            },
            "Vendredi": {
                "Petit-d√©jeuner": "Corn flakes + lait + amandes",
                "D√©jeuner": "Nouilles saut√©es + kheli3 + oignons",
                "D√Æner": "Salade pommes de terre + olives + yaourt"
            },
            "Samedi": {
                "Petit-d√©jeuner": "Pain + Vache qui rit + caf√© + dattes",
                "D√©jeuner": "Omelette + pommes de terre saut√©es + salade",
                "D√Æner": "Soupe tomate + pain + kheli3 + flan"
            },
            "Dimanche": {
                "Petit-d√©jeuner": "Corn flakes + lait + 1 banane",
                "D√©jeuner": "Salade thon + ≈ìuf dur + tomates + olives + pain",
                "D√Æner": "Soupe l√©g√®re + tartine fromage + glace"
            }
        }

# Sauvegarder dans le fichier
def sauvegarder_planning(data):
    with open(FICHIER_JSON, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

# ---------- INTERFACE STREAMLIT ----------

st.title("üçΩÔ∏è Planificateur de Repas Hebdomadaire")

# Charger donn√©es
planning = charger_planning()

# S√©lection du jour
jour = st.selectbox("Choisis un jour :", list(planning.keys()))
est_travail = st.checkbox("Est-ce un jour de travail ?", value=(jour in ["Mardi", "Mercredi"]))

st.subheader(f"Modifier les repas du {jour} :")

# Champs de modification
petit_dej = st.text_input("üçû Petit-d√©jeuner", value=planning[jour].get("Petit-d√©jeuner", ""))
dej = st.text_input("ü•ó D√©jeuner", value=planning[jour].get("D√©jeuner (√† emporter)", "") if est_travail else planning[jour].get("D√©jeuner", ""))
diner = st.text_input("üç≤ D√Æner", value=planning[jour].get("D√Æner", ""))

# Sauvegarde
if st.button("üíæ Enregistrer les modifications"):
    if est_travail:
        planning[jour]["D√©jeuner (√† emporter)"] = dej
        if "D√©jeuner" in planning[jour]:
            planning[jour].pop("D√©jeuner")
    else:
        planning[jour]["D√©jeuner"] = dej
        if "D√©jeuner (√† emporter)" in planning[jour]:
            planning[jour].pop("D√©jeuner (√† emporter)")

    planning[jour]["Petit-d√©jeuner"] = petit_dej
    planning[jour]["D√Æner"] = diner
    sauvegarder_planning(planning)
    st.success(f"‚úÖ Repas du {jour} mis √† jour avec succ√®s !")

# ---------- Affichage recettes (bonus) ----------
recettes = {
    "Soupe tomate": "Faire revenir un oignon, ajouter 1 c√†s concentr√© tomate, eau, sel, cumin, un peu de kheli3, cuire 10 min.",
    "Quiche sans p√¢te": "M√©langer 2 ≈ìufs, 1 verre de lait, 1 c√†s ma√Øzena, oignon, fromage. Cuire au four 20 min √† 180¬∞C.",
    "Nouilles saut√©es": "Faire revenir oignon + tomate concentr√©e, ajouter nouilles cuites, ≈ìuf battu, sauter 5 min."
}

st.markdown("---")
recette_du_jour = st.selectbox("üìñ Voir une recette :", list(recettes.keys()))
st.markdown(f"**Recette :** {recettes[recette_du_jour]}")
