import streamlit as st
import pandas as pd
from utils import charger_json, sauvegarder_json, chemin, get_user_and_role

utilisateur, role = get_user_and_role()
chemins = chemin(utilisateur)

stock = charger_json(chemins["stock"], {})
unites = charger_json("unites.json", {})
categories = charger_json("categories.json", {})

st.title("üì¶ Mon Stock")

unit_choices = ["g", "kg", "ml", "cl", "L", "pcs", "c√†s", "c√†c", ""]
cat_choices = ["Fruits", "L√©gumes", "Prot√©ines", "Produits laitiers", "F√©culents", "√âpices", "Boissons", "Autres"]

st.markdown("### ‚ûï Ajouter un nouvel ingr√©dient")

with st.form("ajout_ingredient"):
    new_ingr = st.text_input("Nom de l‚Äôingr√©dient").strip().lower()
    new_qte = st.number_input("Quantit√©", min_value=1, step=1)
    new_unit = st.selectbox("Unit√©", unit_choices, index=0)
    new_cat = st.selectbox("Cat√©gorie", cat_choices, index=0)
    submitted = st.form_submit_button("Ajouter")

    if submitted:
        if not new_ingr:
            st.warning("‚õî Veuillez entrer un nom d‚Äôingr√©dient.")
        elif new_ingr in stock:
            st.warning("‚õî Cet ingr√©dient existe d√©j√† dans le stock.")
        else:
            stock[new_ingr] = new_qte
            unites[new_ingr] = new_unit
            categories[new_ingr] = new_cat
            sauvegarder_json(chemins["stock"], stock)
            sauvegarder_json("unites.json", unites)
            sauvegarder_json("categories.json", categories)
            st.success(f"‚úÖ {new_ingr} ajout√© avec succ√®s !")
            st.rerun()


stock_data = []
for ingr, qte in stock.items():
    stock_data.append({
        "Ingr√©dient": ingr,
        "Quantit√©": qte,
        "Unit√©": unites.get(ingr, ""),
        "Cat√©gorie": categories.get(ingr, "")
    })

df = pd.DataFrame(stock_data)

edited = []
st.markdown("### ‚úèÔ∏è Modifier stock, unit√© et cat√©gorie")
for i in range(len(df)):
    col1, col2, col3, col4 = st.columns([4, 2, 2, 2])
    ingr = st.text_input(f"Ingr√©dient_{i}", df.at[i, "Ingr√©dient"], key=f"ingr_{i}")
    qte = st.number_input(f"Quantit√©_{i}", 0, 10000, int(df.at[i, "Quantit√©"]), key=f"qte_{i}")
    unit = st.selectbox(f"Unit√©_{i}", unit_choices, index=unit_choices.index(df.at[i, "Unit√©"]) if df.at[i, "Unit√©"] in unit_choices else 0, key=f"unit_{i}")
    cat = st.selectbox(f"Cat√©gorie_{i}", cat_choices, index=cat_choices.index(df.at[i, "Cat√©gorie"]) if df.at[i, "Cat√©gorie"] in cat_choices else 0, key=f"cat_{i}")
    if ingr.strip():
        edited.append({"Ingr√©dient": ingr.strip(), "Quantit√©": qte, "Unit√©": unit, "Cat√©gorie": cat})

if st.button("üíæ Enregistrer le stock"):
    new_stock = {row["Ingr√©dient"]: int(row["Quantit√©"]) for row in edited if row["Quantit√©"] > 0}
    new_units = {row["Ingr√©dient"]: row["Unit√©"] for row in edited}
    new_cats = {row["Ingr√©dient"]: row["Cat√©gorie"] for row in edited}

    sauvegarder_json(chemins["stock"], new_stock)
    sauvegarder_json("unites.json", new_units)
    sauvegarder_json("categories.json", new_cats)

    st.success("‚úÖ Donn√©es enregistr√©es !")
    st.rerun()

